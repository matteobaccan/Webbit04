// Decompiled by Jad v1.5.8f. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   Demo.java

import java.io.PrintStream;
import org.aspectj.runtime.internal.Conversions;
import org.aspectj.runtime.reflect.Factory;

public class Demo
{

    public static void main(String args[])
    {
        String args1[] = args;
        Object aobj[] = new Object[1];
        aobj[0] = args1;
        org.aspectj.lang.JoinPoint joinpoint = Factory.makeJP(ajc$tjp_0, null, null, aobj);
        Logging.aspectOf().ajc$before$Logging$17(joinpoint);
        Demo d = new Demo();
        d.go();
    }

    public Demo()
    {
    }

    public void go()
    {
        Object aobj[];
        org.aspectj.lang.JoinPoint joinpoint = Factory.makeJP(ajc$tjp_1, this, this, aobj = new Object[0]);
        Logging.aspectOf().ajc$before$Logging$17(joinpoint);
        metodo1("PAR1");
        System.out.println("passo 100 a Metodo2 [" + metodo2(100) + "]");
    }

    public void metodo1(String cPar)
    {
        String s = cPar;
        Object aobj[] = new Object[1];
        aobj[0] = s;
        org.aspectj.lang.JoinPoint joinpoint = Factory.makeJP(ajc$tjp_2, this, this, aobj);
        Logging.aspectOf().ajc$before$Logging$17(joinpoint);
        System.out.println("Metodo1 chiamato con parametro stringa [" + cPar + "]");
    }

    public String metodo2(int n)
    {
        int i = n;
        Object aobj[] = new Object[1];
        aobj[0] = Conversions.intObject(i);
        org.aspectj.lang.JoinPoint joinpoint = Factory.makeJP(ajc$tjp_3, this, this, aobj);
        Logging.aspectOf().ajc$before$Logging$17(joinpoint);
        System.out.println("Metodo2 chiamato con parametro numerico [" + n + "]");
        return "valore di ritorno*2 (" + n * 2 + ")";
    }

    public static final org.aspectj.lang.JoinPoint.StaticPart ajc$tjp_0;
    public static final org.aspectj.lang.JoinPoint.StaticPart ajc$tjp_1;
    public static final org.aspectj.lang.JoinPoint.StaticPart ajc$tjp_2;
    public static final org.aspectj.lang.JoinPoint.StaticPart ajc$tjp_3;

    static 
    {
        Factory factory = new Factory("Demo.java", Class.forName("Demo"));
        ajc$tjp_0 = factory.makeSJP("method-execution", factory.makeMethodSig("9-main-Demo-[Ljava.lang.String;:-args:--void-"), 3);
        ajc$tjp_1 = factory.makeSJP("method-execution", factory.makeMethodSig("1-go-Demo----void-"), 10);
        ajc$tjp_2 = factory.makeSJP("method-execution", factory.makeMethodSig("1-metodo1-Demo-java.lang.String:-cPar:--void-"), 15);
        ajc$tjp_3 = factory.makeSJP("method-execution", factory.makeMethodSig("1-metodo2-Demo-int:-n:--java.lang.String-"), 19);
    }
}
